// All Artboards in Page with the Same Width (shift option command E)

// For the purpose of exporting them to a single folder

var current_page = [doc currentPage]
var artboards = [current_page artboards]
var number_artboards = [artboards count]

[current_page deselectAllLayers]

function createSelect(msg, items, selectedItemIndex){
  selectedItemIndex = selectedItemIndex || 0
  //NSNumberFormatter *numberFormatter = [[NSNumberFormatter alloc] init];
  //[numberFormatter setNumberStyle:NSNumberFormatterNoStyle];
  //[numberFormatter stringFromNumber:items]
  

  var accessory = [[NSComboBox alloc] initWithFrame:NSMakeRect(0,0,200,25)]
  [accessory addItemsWithObjectValues:items]
  [accessory selectItemAtIndex:selectedItemIndex]
  

  var alert = [[NSAlert alloc] init]
  [alert setMessageText:msg]
  [alert addButtonWithTitle:'OK']
  [alert addButtonWithTitle:'Cancel']
  [alert setAccessoryView:accessory]
  
  var responseCode = [alert runModal]
  var sel = [accessory indexOfSelectedItem]
  var value = [accessory objectValueOfSelectedItem]

  return [responseCode, sel, value]
}

var options = []
for (var i = 0; i < number_artboards; i++) {

	var a = artboards[i];
	options[i] = [[a frame] width];
}

// Dedupe array
var sortedOptions = options.reduce(function(a,b){
    if (a.indexOf(b) < 0 ) a.push(b);
    return a;
  },[]);

var choice = createSelect('Choose the artboard width', sortedOptions, 1);

if (choice[0] == 1000) {

  var loop = [artboards objectEnumerator]
	while (artboard = loop.nextObject()) {
	artboardWidth = artboard.frame().width();
	if(artboardWidth == choice[2]) {
  		[artboard select:true byExpandingSelection:true]
      //com.bomberstudios.export_item(artboard,format,desktop);
  }
}

}